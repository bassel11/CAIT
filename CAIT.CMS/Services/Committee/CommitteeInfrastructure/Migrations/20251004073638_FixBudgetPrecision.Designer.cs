// <auto-generated />
using System;
using CommitteeInfrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CommitteeInfrastructure.Migrations
{
    [DbContext(typeof(CommitteeContext))]
    [Migration("20251004073638_FixBudgetPrecision")]
    partial class FixBudgetPrecision
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CommitteeCore.Entities.Committee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Budget")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreationDecisionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Scope")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedDecisionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Committees");
                });

            modelBuilder.Entity("CommitteeCore.Entities.CommitteeDecision", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CommitteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DecisionTextArabic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DecisionTextEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GovernanceModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MeetingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Outcome")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommitteeId");

                    b.ToTable("CommitteeDecisions");
                });

            modelBuilder.Entity("CommitteeCore.Entities.CommitteeDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CommitteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommitteeId");

                    b.ToTable("CommitteeDocuments");
                });

            modelBuilder.Entity("CommitteeCore.Entities.CommitteeMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Affiliation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CommitteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CommitteeId");

                    b.ToTable("CommitteeMembers");
                });

            modelBuilder.Entity("CommitteeCore.Entities.CommitteeMemberRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CommitteeMemberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CommitteeMemberId");

                    b.ToTable("CommitteeMemberRoles");
                });

            modelBuilder.Entity("CommitteeCore.Entities.CommitteeDecision", b =>
                {
                    b.HasOne("CommitteeCore.Entities.Committee", "Committee")
                        .WithMany("CommitteeDecisions")
                        .HasForeignKey("CommitteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Committee");
                });

            modelBuilder.Entity("CommitteeCore.Entities.CommitteeDocument", b =>
                {
                    b.HasOne("CommitteeCore.Entities.Committee", "Committee")
                        .WithMany("CommitteeDocuments")
                        .HasForeignKey("CommitteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Committee");
                });

            modelBuilder.Entity("CommitteeCore.Entities.CommitteeMember", b =>
                {
                    b.HasOne("CommitteeCore.Entities.Committee", "Committee")
                        .WithMany("CommitteeMembers")
                        .HasForeignKey("CommitteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Committee");
                });

            modelBuilder.Entity("CommitteeCore.Entities.CommitteeMemberRole", b =>
                {
                    b.HasOne("CommitteeCore.Entities.CommitteeMember", "CommitteeMember")
                        .WithMany("CommitteeMemberRoles")
                        .HasForeignKey("CommitteeMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommitteeMember");
                });

            modelBuilder.Entity("CommitteeCore.Entities.Committee", b =>
                {
                    b.Navigation("CommitteeDecisions");

                    b.Navigation("CommitteeDocuments");

                    b.Navigation("CommitteeMembers");
                });

            modelBuilder.Entity("CommitteeCore.Entities.CommitteeMember", b =>
                {
                    b.Navigation("CommitteeMemberRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
